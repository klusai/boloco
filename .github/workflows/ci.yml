name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'

    - name: Install dependencies
      run: |
        poetry install --with dev

    - name: Run code quality checks
      run: |
        poetry run black --check .
        poetry run isort --check-only .
        poetry run flake8 .

    - name: Run type checking
      run: |
        poetry run mypy boloco --ignore-missing-imports

    - name: Run tests
      run: |
        poetry run pytest tests/ -v

    - name: Test CLI functionality
      run: |
        poetry run boloco generate --max-tokens 3 --output-dir test_output --format json

  test-extras:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        extras: ["enhanced", "full"]

    steps:
    - uses: actions/checkout@v4

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'poetry'

    - name: Install with ${{ matrix.extras }} extras
      run: |
        poetry install --with dev --extras ${{ matrix.extras }}

    - name: Run tests with extras
      run: |
        poetry run pytest tests/ -v

    - name: Test CLI with extras
      run: |
        poetry run boloco generate --max-tokens 5 --output-dir test_${{ matrix.extras }} --format all

  build:
    runs-on: ubuntu-latest
    needs: [test, test-extras]

    steps:
    - uses: actions/checkout@v4

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'poetry'

    - name: Build package
      run: |
        poetry build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/