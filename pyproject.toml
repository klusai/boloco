[tool.poetry]
name = "boloco"
version = "2.0.0"
description = "A Boolean logic expression dataset generator with enhanced features and HuggingFace integration"
authors = ["BoLoCo Contributors <contributors@boloco.dev>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/klusai/boloco"
repository = "https://github.com/klusai/boloco"
documentation = "https://github.com/klusai/boloco"
keywords = [
    "boolean-logic", 
    "dataset-generation", 
    "machine-learning", 
    "ai-training", 
    "synthetic-data",
    "logical-reasoning",
    "huggingface",
    "nlp"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Education",
    "Typing :: Typed"
]
packages = [{include = "boloco"}]

[tool.poetry.dependencies]
python = "^3.8"
numpy = "^1.20.0"

# Optional dependencies for enhanced features
datasets = {version = "^2.0.0", optional = true}
transformers = {version = "^4.0.0", optional = true}
rich = {version = "^10.0.0", optional = true}

[tool.poetry.extras]
enhanced = ["datasets", "rich"]
full = ["datasets", "transformers", "rich"]
all = ["datasets", "transformers", "rich"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
black = "^22.0.0"
isort = "^5.0.0"
mypy = "^0.900"
flake8 = "^4.0.0"
pre-commit = "^2.20.0"
jupyter = "^1.0.0"

[tool.poetry.scripts]
boloco = "boloco.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["boloco"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "datasets.*",
    "transformers.*",
    "rich.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]